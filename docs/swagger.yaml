basePath: /api/v1
definitions:
  github_com_rowjay007_walkit_internal_model.ConfirmPasswordResetRequest:
    properties:
      password:
        minLength: 8
        type: string
      passwordConfirm:
        type: string
      token:
        type: string
    required:
    - password
    - passwordConfirm
    - token
    type: object
  github_com_rowjay007_walkit_internal_model.Exercise:
    properties:
      category:
        type: string
      created:
        type: string
      description:
        type: string
      duration:
        type: integer
      id:
        type: string
      intensity:
        type: string
      muscleGroup:
        items:
          type: string
        type: array
      name:
        type: string
      updated:
        type: string
    type: object
  github_com_rowjay007_walkit_internal_model.ExerciseSet:
    properties:
      duration:
        type: integer
      exerciseId:
        type: string
      notes:
        type: string
      reps:
        type: integer
      sets:
        type: integer
      weight:
        type: number
    type: object
  github_com_rowjay007_walkit_internal_model.LoginRequest:
    properties:
      identity:
        maxLength: 100
        minLength: 3
        type: string
      password:
        maxLength: 100
        minLength: 8
        type: string
    required:
    - identity
    - password
    type: object
  github_com_rowjay007_walkit_internal_model.LoginResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.User'
    type: object
  github_com_rowjay007_walkit_internal_model.PasswordResetRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  github_com_rowjay007_walkit_internal_model.Response:
    properties:
      data: {}
      error:
        example: Error message
        type: string
      message:
        example: Success message
        type: string
    type: object
  github_com_rowjay007_walkit_internal_model.UpdateUserRequest:
    properties:
      activityLevel:
        type: string
      avatar:
        type: string
      email:
        type: string
      fitnessGoal:
        type: string
      username:
        type: string
    type: object
  github_com_rowjay007_walkit_internal_model.User:
    properties:
      activityLevel:
        type: string
      avatar:
        type: string
      created:
        type: string
      email:
        type: string
      emailVisibility:
        type: boolean
      fitnessGoal:
        type: string
      id:
        type: string
      password:
        type: string
      passwordConfirm:
        type: string
      updated:
        type: string
      username:
        type: string
    type: object
  github_com_rowjay007_walkit_internal_model.WorkoutPlan:
    properties:
      created:
        type: string
      description:
        type: string
      exercises:
        items:
          $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.ExerciseSet'
        type: array
      id:
        type: string
      name:
        type: string
      schedule:
        $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.WorkoutSchedule'
      updated:
        type: string
      userId:
        type: string
    type: object
  github_com_rowjay007_walkit_internal_model.WorkoutSchedule:
    properties:
      days:
        items:
          type: string
        type: array
      endDate:
        type: string
      startDate:
        type: string
      time:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A fitness workout tracking API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Walkit API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      summary: User login
      tags:
      - auth
  /auth/password-reset:
    post:
      consumes:
      - application/json
      description: Send a password reset email to the user
      parameters:
      - description: Password reset request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.PasswordResetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      summary: Request password reset
      tags:
      - auth
  /auth/password-reset/confirm:
    post:
      consumes:
      - application/json
      description: Reset user's password using the reset token
      parameters:
      - description: Password reset confirmation
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.ConfirmPasswordResetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      summary: Confirm password reset
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      summary: Register new user
      tags:
      - auth
  /exercises:
    get:
      consumes:
      - application/json
      description: Get a list of exercises with optional filtering
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      - description: Exercise type
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Exercise'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      security:
      - Bearer: []
      summary: List exercises
      tags:
      - exercises
    post:
      consumes:
      - application/json
      description: Create a new exercise in the system
      parameters:
      - description: Exercise details
        in: body
        name: exercise
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Exercise'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Exercise'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      security:
      - Bearer: []
      summary: Create new exercise
      tags:
      - exercises
  /exercises/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing exercise
      parameters:
      - description: Exercise ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      security:
      - Bearer: []
      summary: Delete exercise
      tags:
      - exercises
    get:
      consumes:
      - application/json
      description: Get details of a specific exercise
      parameters:
      - description: Exercise ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Exercise'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      security:
      - Bearer: []
      summary: Get exercise by ID
      tags:
      - exercises
    put:
      consumes:
      - application/json
      description: Update an existing exercise
      parameters:
      - description: Exercise ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated exercise details
        in: body
        name: exercise
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Exercise'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      security:
      - Bearer: []
      summary: Update exercise
      tags:
      - exercises
  /users:
    get:
      consumes:
      - application/json
      description: Get a list of users with optional filtering
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.User'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      security:
      - Bearer: []
      summary: List all users
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specific user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      security:
      - Bearer: []
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get a user's profile by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.User'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      security:
      - Bearer: []
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a specific user's profile by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User update data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      security:
      - Bearer: []
      summary: Update user
      tags:
      - users
  /users/me:
    delete:
      consumes:
      - application/json
      description: Delete the currently authenticated user's account
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      security:
      - Bearer: []
      summary: Delete current user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get the profile of the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.User'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      security:
      - Bearer: []
      summary: Get current user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update the profile of the currently authenticated user
      parameters:
      - description: User update data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      security:
      - Bearer: []
      summary: Update current user
      tags:
      - users
  /workouts:
    post:
      consumes:
      - application/json
      description: Create a new workout plan
      parameters:
      - description: Workout details
        in: body
        name: workout
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.WorkoutPlan'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.WorkoutPlan'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      summary: Create new workout
      tags:
      - workouts
  /workouts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing workout plan
      parameters:
      - description: Workout ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      summary: Delete workout
      tags:
      - workouts
    get:
      consumes:
      - application/json
      description: Get details of a specific workout
      parameters:
      - description: Workout ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
            - properties:
                data:
                  $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.WorkoutPlan'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      summary: Get workout by ID
      tags:
      - workouts
    put:
      consumes:
      - application/json
      description: Update an existing workout plan
      parameters:
      - description: Workout ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated workout details
        in: body
        name: workout
        required: true
        schema:
          $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.WorkoutPlan'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_rowjay007_walkit_internal_model.Response'
      summary: Update workout
      tags:
      - workouts
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
